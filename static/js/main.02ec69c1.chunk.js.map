{"version":3,"sources":["Components/Credentials.js","Components/Kitchen.js","Components/Navigation.js","Components/Breakfast.js","Components/Menu.js","Components/Date.js","Components/Login.js","Components/Error.js","App.js","serviceWorker.js","index.js","Assets/burguerqB.jpg"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","settings","timestampsInSnapshots","db","Kitchen","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","orders","collection","onSnapshot","querySnapshot","forEach","doc","console","log","data","orderSender","react_default","a","createElement","attention","lib","s","m","Component","Navigation","className","src","Logo","alt","Breakfast","nameKeeper","event","setState","client","target","value","props","waiter","handleOnClick","_event$target","name","orderCopy","order","push","price","totalState","total","totalPay","parseInt","deleteall","window","confirm","delete","index","filter","item","i","sendOrder","currentOrderClient","currentWaiter","add","then","docRef","id","alert","catch","error","document","getElementById","_this2","List","MenuData","Desayunos","map","key","header","image","pic","actions","large","onClick","type","description","onChange","bind","placeholder","floating","small","waves","icon","Date","toLocaleTimeString","toDateString","right","Menu","seeBreakfast","seeDinner","Components_Breakfast","attentionBy","Time","Login","isSignedIn","uiConfig","signInFlow","signInSuccessUrl","signInOptions","auth","EmailAuthProvider","PROVIDER_ID","callbacks","signInSuccess","componentDidMount","onAuthStateChanged","user","popout","defaultActiveKey","currentUser","displayName","Components_Date","signOut","NavLink","to","Components_Menu","StyledFirebaseAuth_default","firebaseAuth","Error","App","BrowserRouter","basename","process","Components_Navigation","Switch","Route","path","component","exact","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.02ec69c1.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nvar config = {\n  apiKey: 'AIzaSyAymTnu-ZB2YMUgfMEvlIqgufdSrmbJRxQ',\n  authDomain: 'burguer-queen-839fc.firebaseapp.com',\n  databaseURL: 'https://burguer-queen-839fc.firebaseio.com',\n  projectId: 'burguer-queen-839fc',\n  storageBucket: 'burguer-queen-839fc.appspot.com',\n  messagingSenderId: '106440580751'\n};\n\nconst firebaseInit = firebase.initializeApp(config);\n\nconst firestore = firebase.firestore();\nconst settings = { /* your settings... */ timestampsInSnapshots: true };\nfirestore.settings(settings);\n\n// Initialize Cloud Firestore through Firebase\nconst db = firebase.firestore();\n\nexport { firebaseInit, db };\n","import React, { Component } from 'react';\nimport { Row, Col, Card, Button } from 'react-materialize';\nimport { db } from '../Components/Credentials';\n\nclass Kitchen extends Component {\n  constructor() {\n    super();\n    this.state = {\n      orders: []\n    };\n  }\n\n  componentDidMount() {\n    db.collection('orders').onSnapshot(querySnapshot => {\n      //const orders = [];\n      querySnapshot.forEach(doc => {\n        console.log(doc.data().orderSender);\n        return (\n          <div>\n            <h4>{doc.data().orderSender.attention}</h4>\n          </div>\n        );\n      });\n      //orders.push(doc.data());\n    });\n    //console.log('Current ORDERS ', orders.join(', '));\n  }\n\n  // componentDidMount() {\n  //   db.collection('orders').onSnapshot(querySnapshot => {\n  //     const orders = [];\n  //     querySnapshot.forEach(doc => {\n  //       const { status, order, name } = doc.data();\n  //       console.log(status, order);\n  //       let dataOrder = { status, order, name, id: doc.id };\n  //       orders.push(dataOrder);\n  //     });\n  //     this.setState({ orders });\n  //   });\n  // }\n\n  render() {\n    return (\n      <div>\n        <Row>\n          <Col s={6} m={6}>\n            <h4>KITCHEN PAGE</h4>\n          </Col>\n          <Col s={4} m={4}>\n            <Button>Back to Menú</Button>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Kitchen;\n","import React, { Component } from 'react';\nimport { Navbar, NavItem, Button } from 'react-materialize';\nimport Logo from '../Assets/burguerqB.jpg';\n\nclass Navigation extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar className=\"deep-purple darken-3 right\">\n          <NavItem>\n            <img className=\"logo\" src={Logo} alt=\"Logo\" />\n          </NavItem>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default Navigation;\n","import React, { Component } from 'react';\nimport MenuData from '../Data/menu.json';\nimport {\n  Card,\n  CardTitle,\n  Row,\n  Col,\n  Button,\n  Collection,\n  CollectionItem,\n  Icon\n} from 'react-materialize';\nimport { db } from '../Components/Credentials';\n\nclass Breakfast extends Component {\n  constructor() {\n    super();\n    this.state = {\n      order: [],\n      client: '',\n      total: 0,\n      attention: null\n    };\n  }\n\n  nameKeeper = event => {\n    this.setState({ client: event.target.value });\n    this.setState({\n      attention: this.props.waiter\n    });\n  };\n\n  //Function to add or rest the value of the items\n  handleOnClick = event => {\n    const { value, name } = event.target;\n    const orderCopy = this.state.order;\n    orderCopy.push({ name: name, price: value });\n    //addition function\n    let totalState = this.state.total;\n    let valueI = parseInt(value);\n    let totalPay = valueI + totalState;\n    console.log(totalPay);\n    //set state of items selected\n    this.setState({\n      order: orderCopy\n    });\n    this.setState({\n      total: totalPay\n    });\n  };\n  //function to delete all the order:\n  deleteall = event => {\n    if (window.confirm('Are you sure you want to delete all the order?')) {\n      this.setState({\n        order: [],\n        total: 0\n      });\n    }\n  };\n\n  //delete function to erase one by one item of the order:\n  delete = index => {\n    this.setState({\n      order: this.state.order.filter((item, i) => {\n        //console.log('forEach item', item);\n\n        return i !== index;\n      })\n    });\n    this.state.order.forEach((item, i) => {\n      if (i === index) {\n        //console.log('forEach sustraction', this.state.total);\n        this.setState({ total: this.state.total - parseInt(item.price) });\n      }\n    });\n  };\n  //Function to send the order to the kitchen (firestore database) and being processed\n  sendOrder = () => {\n    //variables to keep the state on the promises\n    const orderSender = this.state;\n    const currentOrderClient = this.state.client;\n    const currentWaiter = this.state.attention;\n    console.log(currentOrderClient);\n    //create and keep the order in the collection orders in firestore db\n    db.collection('orders')\n      .add({ orderSender })\n      .then(function(docRef) {\n        console.log('Document written with ID: ', docRef.id);\n        //confirm the order is sended and the time to be ready\n        alert(\n          'Ready! The order of ' +\n            currentOrderClient +\n            ' will be ready in 15 min.' +\n            ' Nice job ' +\n            currentWaiter +\n            '!!'\n        );\n      })\n      .catch(function(error) {\n        console.error('Error adding document: ', error);\n      });\n    //clean the state to be able to create new orders\n    this.setState({\n      order: [],\n      client: '',\n      total: 0,\n      attention: null\n    });\n    //clean input of the client's Name\n    const eraseInput = document.getElementById('clientsName');\n    eraseInput.value = '';\n    //send to the kitchen component\n  };\n\n  render() {\n    const List = MenuData.Desayunos.map((item, i) => {\n      return (\n        <div key={i}>\n          <div>\n            <Col s={4} m={4}>\n              <Card\n                className=\"medium\"\n                header={<CardTitle image={item.pic}>{item.name}</CardTitle>}\n                actions={[\n                  <Button\n                    key={i}\n                    large\n                    onClick={this.handleOnClick}\n                    name={item.name}\n                    value={item.price}\n                    type=\"button\"\n                  >\n                    $ {item.price}\n                  </Button>\n                ]}\n              >\n                {item.description}\n              </Card>\n            </Col>\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <div>\n        <Row>\n          {List}\n          <div>\n            <Col s={8} m={8}>\n              <Card className=\"amber lighten-4\">\n                <Card>\n                  <input\n                    id=\"clientsName\"\n                    type=\"text\"\n                    onChange={this.nameKeeper.bind(this)}\n                    placeholder=\"Write the client's name\"\n                  />\n                </Card>\n\n                <Collection\n                  header={\n                    <div>\n                      <h4>Order of:</h4>\n                      <h3> {this.state.client}</h3>\n                    </div>\n                  }\n                >\n                  <CollectionItem>\n                    {this.state.order.map((item, i) => {\n                      return (\n                        <h6>\n                          {item.name} {item.price}\n                          <Button\n                            floating\n                            small\n                            className=\"red\"\n                            waves=\"light\"\n                            icon=\"clear\"\n                            onClick={\n                              // console.log('clear btn');\n                              this.delete.bind(this, i)\n                            }\n                          />\n                        </h6>\n                      );\n                    })}{' '}\n                  </CollectionItem>\n                  <CollectionItem>\n                    {' '}\n                    <h5>\n                      {' '}\n                      Total: <span>{this.state.total} </span>\n                    </h5>\n                  </CollectionItem>\n                  <CollectionItem>\n                    <p>{new Date().toLocaleTimeString()}</p>\n                    <span>{new Date().toDateString()}</span>\n                  </CollectionItem>\n                  <CollectionItem>\n                    <div className=\"buttons\">\n                      <Button\n                        floating\n                        large\n                        className=\"red\"\n                        waves=\"light\"\n                        icon=\"delete\"\n                        onClick={this.deleteall.bind(this)}\n                      />\n\n                      <Button\n                        large\n                        waves=\"light\"\n                        onClick={this.sendOrder.bind(this)}\n                      >\n                        <Icon large right>\n                          check\n                        </Icon>\n                        ORDER\n                      </Button>\n                    </div>\n                  </CollectionItem>\n                </Collection>\n              </Card>\n            </Col>\n          </div>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Breakfast;\n","import React, { Component } from 'react';\nimport { Col, Button, Icon, Row } from 'react-materialize';\nimport Breakfast from './Breakfast';\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seeBreakfast: false,\n      seeDinner: false\n    };\n    //  console.log(this.state.seeBreakfast);\n    //  console.log('there should be the dinner for', this.state.seeDinner);\n    //onClick={this.goToKitchen.bind()}\n  }\n\n  render() {\n    if (this.state.seeBreakfast === true) {\n      return <Breakfast waiter={this.props.attentionBy} />;\n    }\n    return (\n      <div>\n        <Row>\n          <Col s={6} m={6}>\n            <section className=\"action\">\n              <Button\n                large\n                waves=\"yellow\"\n                onClick={() => {\n                  this.setState({ seeBreakfast: true });\n                  //console.log(this.state.seeBreakfast);\n                }}\n              >\n                <Icon right>local_cafe</Icon>\n                BREAKFAST\n              </Button>\n            </section>\n          </Col>\n          <Col s={6} m={6}>\n            <section className=\"action\">\n              <Button\n                large\n                waves=\"yellow\"\n                onClick={() => {\n                  this.setState({ seeBreakfast: true });\n                  console.log(this.state.seeBreakfast);\n                }}\n              >\n                <Icon right>restaurant</Icon>\n                DINNER\n              </Button>\n            </section>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Menu;\n","import React, { Component } from 'react';\n\n//componente para actualizar la fecha y hora\nclass Time extends Component {\n  render() {\n    return (\n      <div>\n        <h6> You are active since {new Date().toLocaleTimeString()}</h6>\n      </div>\n    );\n  }\n}\n\nexport default Time;\n","import React, { Component } from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase';\nimport Menu from './Menu';\nimport Time from './Date';\nimport {\n  Button,\n  Collapsible,\n  CollapsibleItem,\n  Row,\n  Col,\n  Navbar,\n  NavItem\n} from 'react-materialize';\nimport { NavLink } from 'react-router-dom';\n//import { BrowserRouter, Route } from 'react-router-dom';\n\nclass Login extends Component {\n  firebaseInit;\n  state = { isSignedIn: false };\n  uiConfig = {\n    // Popup sign in flow rather than redirect flow.\n    signInFlow: 'popup',\n    signInSuccessUrl: '/signedIn',\n    signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID],\n    callbacks: {\n      signInSuccess: () => false\n    }\n  };\n\n  componentDidMount = () => {\n    firebase.auth().onAuthStateChanged(user => {\n      this.setState({ isSignedIn: !!user });\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.isSignedIn ? (\n          <div>\n            <Row>\n              <div>\n                <Collapsible\n                  className=\"collapsible-card\"\n                  popout\n                  defaultActiveKey={1}\n                >\n                  <CollapsibleItem\n                    className=\"waiter-card\"\n                    header={\n                      firebase.auth().currentUser.displayName + ' is working'\n                    }\n                    icon=\"account_circle\"\n                  >\n                    <Time />\n                    <h5>\n                      ¡Nice Job {firebase.auth().currentUser.displayName + '!'}\n                    </h5>\n                    <Button onClick={() => firebase.auth().signOut()}>\n                      Close my session\n                    </Button>\n                  </CollapsibleItem>\n                </Collapsible>\n                <div>\n                  <Row>\n                    <Navbar className=\"deep-purple darken-3\">\n                      <NavItem className=\"right\">\n                        <NavLink to=\"/Kitchen\">\n                          <Button>Kitchen</Button>\n                        </NavLink>\n                      </NavItem>\n                      <NavItem>\n                        <h4>Clients Order: </h4>\n                      </NavItem>\n                    </Navbar>\n                  </Row>\n                </div>\n                <Menu attentionBy={firebase.auth().currentUser.displayName} />\n              </div>\n            </Row>\n          </div>\n        ) : (\n          <div>\n            <StyledFirebaseAuth\n              uiConfig={this.uiConfig}\n              firebaseAuth={firebase.auth()}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from 'react';\n\nconst Error = () => {\n  return (\n    <div>\n      <p>Error: Path does not exist!</p>\n    </div>\n  );\n};\n\nexport default Error;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Kitchen from './Components/Kitchen';\nimport Navigation from './Components/Navigation';\nimport Login from './Components/Login';\nimport Error from './Components/Error';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <div>\n          <Navigation />\n          <Switch>\n            <Route path=\"/\" component={Login} exact />\n            <Route path=\"/Kitchen\" component={Kitchen} />\n            <Route component={Error} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n//\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/burguerqB.4d8c96f8.jpg\";"],"sourceRoot":""}